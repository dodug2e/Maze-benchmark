{
  "ml_training": {
    "cnn": {
      "model_type": "CNN",
      "training_time": 50.3427255153656,
      "best_val_accuracy": 24.2,
      "final_val_accuracy": 22.4,
      "total_epochs": 2,
      "model_info": {
        "total_parameters": 6878020,
        "trainable_parameters": 6878020,
        "estimated_memory_mb": 26.237564086914062
      },
      "train_history": [
        {
          "epoch": 0,
          "train_loss": 1.395277424812317,
          "train_acc": 26.65,
          "val_loss": 1.3878222913742067,
          "val_acc": 24.2,
          "vram_usage": 1451.77734375
        },
        {
          "epoch": 1,
          "train_loss": 1.386515257358551,
          "train_acc": 25.15,
          "val_loss": 1.3874162387847901,
          "val_acc": 22.4,
          "vram_usage": 1450.33984375
        }
      ],
      "model_paths": {
        "best": "output\\models\\best_cnn_model.pth",
        "final": "output\\models\\final_cnn_model.pth"
      },
      "performance": {
        "duration_seconds": 52.0,
        "total_samples": 104,
        "cpu_percent": {
          "min": 0.0,
          "max": 35.4,
          "avg": 13.963461538461539,
          "peak": 35.4
        },
        "memory_mb": {
          "min": 14236.13671875,
          "max": 16045.86328125,
          "avg": 15530.491661658654,
          "peak": 16045.86328125
        },
        "gpu_percent": {
          "min": 0,
          "max": 89,
          "avg": 19.28846153846154,
          "peak": 89
        },
        "vram_used_mb": {
          "min": 971.08203125,
          "max": 1457.33984375,
          "avg": 1362.6787109375,
          "peak": 1457.33984375
        },
        "vram_total_mb": 6144.0,
        "power_watts": {
          "min": 13.185,
          "max": 130.749,
          "avg": 41.08851923076923,
          "peak": 130.749
        },
        "temperature_c": {
          "min": 39,
          "max": 56,
          "avg": 45.35576923076923,
          "peak": 56
        }
      }
    },
    "deep_forest": {
      "error": "name 'os' is not defined"
    }
  },
  "hybrid_evaluation": {
    "total_mazes": 5,
    "algorithms": {
      "aco": {
        "success_count": 0,
        "success_rate": 0.0,
        "avg_execution_time": 0.0,
        "avg_path_length": 0,
        "total_successful_paths": 0
      },
      "aco_cnn": {
        "success_count": 0,
        "success_rate": 0.0,
        "avg_execution_time": 0.0,
        "avg_path_length": 0,
        "total_successful_paths": 0
      },
      "aco_df": {
        "success_count": 0,
        "success_rate": 0.0,
        "avg_execution_time": 0.0,
        "avg_path_length": 0,
        "total_successful_paths": 0
      }
    },
    "comparison": {
      "best_success_rate": {
        "algorithm": null,
        "value": 0
      },
      "best_avg_path_length": {
        "algorithm": null,
        "value": Infinity
      },
      "fastest_execution": {
        "algorithm": "aco",
        "value": 0.0
      },
      "ranking": [
        {
          "rank": 1,
          "algorithm": "aco",
          "score": 0.0,
          "success_rate": 0.0,
          "avg_path_length": 0
        },
        {
          "rank": 2,
          "algorithm": "aco_cnn",
          "score": 0.0,
          "success_rate": 0.0,
          "avg_path_length": 0
        },
        {
          "rank": 3,
          "algorithm": "aco_df",
          "score": 0.0,
          "success_rate": 0.0,
          "avg_path_length": 0
        }
      ]
    },
    "individual_results": [
      {
        "maze_id": "maze_000000",
        "maze_size": [
          123,
          123
        ],
        "start_pos": [
          1,
          0
        ],
        "goal_pos": [
          1,
          122
        ],
        "algorithms": {
          "aco": {
            "error": "BaseACO.__init__() got an unexpected keyword argument 'cnn_weight'"
          },
          "aco_cnn": {
            "error": "BaseACO.__init__() got an unexpected keyword argument 'df_weight'"
          }
        }
      },
      {
        "maze_id": "maze_000001",
        "maze_size": [
          101,
          101
        ],
        "start_pos": [
          1,
          0
        ],
        "goal_pos": [
          1,
          100
        ],
        "algorithms": {
          "aco": {
            "error": "BaseACO.__init__() got an unexpected keyword argument 'cnn_weight'"
          },
          "aco_cnn": {
            "error": "BaseACO.__init__() got an unexpected keyword argument 'df_weight'"
          }
        }
      },
      {
        "maze_id": "maze_000002",
        "maze_size": [
          169,
          169
        ],
        "start_pos": [
          1,
          0
        ],
        "goal_pos": [
          1,
          168
        ],
        "algorithms": {
          "aco": {
            "error": "BaseACO.__init__() got an unexpected keyword argument 'cnn_weight'"
          },
          "aco_cnn": {
            "error": "BaseACO.__init__() got an unexpected keyword argument 'df_weight'"
          }
        }
      },
      {
        "maze_id": "maze_000003",
        "maze_size": [
          177,
          177
        ],
        "start_pos": [
          1,
          0
        ],
        "goal_pos": [
          1,
          176
        ],
        "algorithms": {
          "aco": {
            "error": "BaseACO.__init__() got an unexpected keyword argument 'cnn_weight'"
          },
          "aco_cnn": {
            "error": "BaseACO.__init__() got an unexpected keyword argument 'df_weight'"
          }
        }
      },
      {
        "maze_id": "maze_000004",
        "maze_size": [
          123,
          123
        ],
        "start_pos": [
          1,
          0
        ],
        "goal_pos": [
          1,
          122
        ],
        "algorithms": {
          "aco": {
            "error": "BaseACO.__init__() got an unexpected keyword argument 'cnn_weight'"
          },
          "aco_cnn": {
            "error": "BaseACO.__init__() got an unexpected keyword argument 'df_weight'"
          }
        }
      }
    ]
  },
  "total_time": 53.427199840545654,
  "config_used": {
    "dataset_path": "datasets",
    "output_dir": "output",
    "models": [
      "cnn",
      "deep_forest"
    ],
    "data_limits": {
      "max_train_samples": 100,
      "max_valid_samples": 30,
      "max_test_samples": 10
    },
    "cnn": {
      "input_size": 224,
      "num_classes": 4,
      "dropout_rate": 0.2,
      "learning_rate": 0.001,
      "batch_size": 4,
      "epochs": 2,
      "weight_decay": 0.0001,
      "scheduler": {
        "step_size": 5,
        "gamma": 0.5
      },
      "resize_strategy": "pad_and_resize"
    },
    "deep_forest": {
      "n_layers": 1,
      "n_estimators": 20,
      "max_depth": 5,
      "min_improvement": 0.001,
      "patience": 2,
      "random_state": 42,
      "n_jobs": -1
    },
    "aco_hybrid": {
      "n_ants": 10,
      "n_iterations": 20,
      "alpha": 1.0,
      "beta": 2.0,
      "rho": 0.1,
      "Q": 100.0,
      "max_steps": 200,
      "cnn_weight": 0.3,
      "df_weight": 0.3
    },
    "evaluation": {
      "test_mazes": 5,
      "performance_metrics": [
        "path_length",
        "execution_time",
        "success_rate",
        "memory_usage",
        "convergence_rate"
      ]
    },
    "hardware": {
      "gpu_memory_limit_mb": 6144,
      "cpu_cores": 8,
      "memory_limit_gb": 16
    },
    "logging": {
      "level": "INFO",
      "save_logs": true,
      "log_interval": 10
    }
  }
}